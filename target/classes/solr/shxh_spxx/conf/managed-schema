<?xml version="1.0" encoding="UTF-8"?>

<schema name="shxh_spxx" version="1.6"> 
  <!-- field 模板 -->  
  <!--
    	<field name="_version_" type="long" indexed="true" stored="true"/>
    	<field name="id" type="long" indexed="true" stored="true" multiValued="false" required="true"/>
        <field name="dj" type="tdouble" indexed="true" stored="true" multiValued="false"/>
        <field name="pm" type="string" indexed="true" stored="true" multiValued="false"/>
        <field name="isbn" type="string" indexed="true" stored="true" multiValued="false"/>
        <field name="spxxid" type="string" indexed="true" stored="true" multiValued="false"/>
        <field name="len" type="int" indexed="true" stored="true" multiValued="false" default="0"/>
        <field name="csm" type="string" indexed="true" stored="true" multiValued="false"/>
        <field name="zz" type="string" indexed="true" stored="true" multiValued="false"/>
        <field name="sdhrq" type="tdate" indexed="true" stored="true" multiValued="false"/>
        <field name="cbny" type="tint" indexed="true" stored="true" multiValued="false"/>
        <field name="cbn" type="tint" indexed="true" stored="true" multiValued="false"/>
        <field name="cbsid" type="string" indexed="true" stored="true" multiValued="false"/>
        <field name="bc" type="string" indexed="true" stored="true" multiValued="false"/>
        <field name="text" type="text_general" indexed="true" stored="false" multiValued="false"/>
		-->  
  <!-- uniqueKey 模板 -->  
  <!--
        <uniqueKey>id</uniqueKey>
		-->  
  <fieldType name="int" class="solr.TrieIntField" precisionStep="0" positionIncrementGap="0"/>  
  <fieldType name="float" class="solr.TrieFloatField" precisionStep="0" positionIncrementGap="0"/>  
  <fieldType name="long" class="solr.TrieLongField" precisionStep="0" positionIncrementGap="0"/>  
  <fieldType name="double" class="solr.TrieDoubleField" precisionStep="0" positionIncrementGap="0"/>  
  <!-- The StrField type is not analyzed, but indexed/stored verbatim.
           It supports doc values but in that case the field needs to be
           single-valued and either required or have a default value.
          -->  
  <fieldType name="string" class="solr.StrField" sortMissingLast="true"/>  
  <!-- boolean type: "true" or "false" -->  
  <fieldType name="boolean" class="solr.BoolField" sortMissingLast="true"/>  
  <fieldType name="tint" class="solr.TrieIntField" precisionStep="8" positionIncrementGap="0"/>  
  <fieldType name="tfloat" class="solr.TrieFloatField" precisionStep="8" positionIncrementGap="0"/>  
  <fieldType name="tlong" class="solr.TrieLongField" precisionStep="8" positionIncrementGap="0"/>  
  <fieldType name="tdouble" class="solr.TrieDoubleField" precisionStep="8" positionIncrementGap="0"/>  
  <fieldType name="date" class="solr.TrieDateField" precisionStep="0" positionIncrementGap="0"/>  
  <!-- A Trie based date field for faster date range queries and date faceting. -->  
  <fieldType name="tdate" class="solr.TrieDateField" precisionStep="6" positionIncrementGap="0"/>  
  <!-- A general text field that has reasonable, generic
         cross-language defaults: it tokenizes with StandardTokenizer,
   removes stop words from case-insensitive "stopwords.txt"
   (empty by default), and down cases.  At query time only, it
   also applies synonyms. -->  
  <fieldType name="text_general" class="solr.TextField" positionIncrementGap="100"> 
    <analyzer type="index"> 
      <tokenizer class="solr.StandardTokenizerFactory"/>  
      <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>  
      <!-- in this example, we will only use synonyms at query time
        <filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
        -->  
      <filter class="solr.LowerCaseFilterFactory"/> 
    </analyzer>  
    <analyzer type="query"> 
      <tokenizer class="solr.StandardTokenizerFactory"/>  
      <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>  
      <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>  
      <filter class="solr.LowerCaseFilterFactory"/> 
    </analyzer> 
  </fieldType>  
  <!-- Just like text_general except it reverses the characters of
   each token, to enable more efficient leading wildcard queries. -->  
  <fieldType name="text_general_rev" class="solr.TextField" positionIncrementGap="100"> 
    <analyzer type="index"> 
      <tokenizer class="solr.StandardTokenizerFactory"/>  
      <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>  
      <filter class="solr.LowerCaseFilterFactory"/>  
      <filter class="solr.ReversedWildcardFilterFactory" withOriginal="true" maxPosAsterisk="3" maxPosQuestion="2" maxFractionAsterisk="0.33"/> 
    </analyzer>  
    <analyzer type="query"> 
      <tokenizer class="solr.StandardTokenizerFactory"/>  
      <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>  
      <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>  
      <filter class="solr.LowerCaseFilterFactory"/> 
    </analyzer> 
  </fieldType>  
  <!-- charFilter + WhitespaceTokenizer  -->  
  <!--
    <fieldType name="text_char_norm" class="solr.TextField" positionIncrementGap="100" >
      <analyzer>
        <charFilter class="solr.MappingCharFilterFactory" mapping="mapping-ISOLatin1Accent.txt"/>
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
      </analyzer>
    </fieldType>
    -->  
  <!-- This is an example of using the KeywordTokenizer along
         With various TokenFilterFactories to produce a sortable field
         that does not include some properties of the source text
      -->  
  <fieldType name="alphaOnlySort" class="solr.TextField" sortMissingLast="true" omitNorms="true"> 
    <analyzer> 
      <!-- KeywordTokenizer does no actual tokenizing, so the entire
             input string is preserved as a single token
          -->  
      <tokenizer class="solr.KeywordTokenizerFactory"/>  
      <!-- The LowerCase TokenFilter does what you expect, which can be
             when you want your sorting to be case insensitive
          -->  
      <filter class="solr.LowerCaseFilterFactory"/>  
      <!-- The TrimFilter removes any leading or trailing whitespace -->  
      <filter class="solr.TrimFilterFactory"/>  
      <!-- The PatternReplaceFilter gives you the flexibility to use
             Java Regular expression to replace any sequence of characters
             matching a pattern with an arbitrary replacement string, 
             which may include back references to portions of the original
             string matched by the pattern.
             
             See the Java Regular Expression documentation for more
             information on pattern and replacement string syntax.
             
             http://docs.oracle.com/javase/7/docs/api/java/util/regex/package-summary.html
          -->  
      <filter class="solr.PatternReplaceFilterFactory" pattern="([^a-z])" replacement="" replace="all"/> 
    </analyzer> 
  </fieldType>  
  <fieldType name="multival" class="solr.TextField"> 
    <analyzer type="query"> 
      <tokenizer class="solr.PatternTokenizerFactory" pattern=","/> 
    </analyzer> 
  </fieldType>  
  <uniqueKey>id</uniqueKey>
  <field name="_version_" type="long" indexed="true" stored="true"/>
  <field name="id" type="long" indexed="true" stored="true" multiValued="false" required="true"/>
  <field name="dj" type="tdouble" indexed="true" stored="true" multiValued="false"/>
  <field name="pm" type="string" indexed="true" stored="true" multiValued="false"/>
  <field name="isbn" type="string" indexed="true" stored="true" multiValued="false"/>
  <field name="spxxid" type="string" indexed="true" stored="true" multiValued="false"/>
  <field name="len" type="int" indexed="true" stored="true" multiValued="false" default="0"/>
  <field name="csm" type="string" indexed="true" stored="true" multiValued="false"/>
  <field name="zz" type="string" indexed="true" stored="true" multiValued="false"/>
  <field name="sdhrq" type="tdate" indexed="true" stored="true" multiValued="false"/>
  <field name="cbny" type="tint" indexed="true" stored="true" multiValued="false"/>
  <field name="cbn" type="tint" indexed="true" stored="true" multiValued="false"/>
  <field name="cbsid" type="string" indexed="true" stored="true" multiValued="false"/>
  <field name="bc" type="string" indexed="true" stored="true" multiValued="false"/>
  <field name="text" type="text_general" indexed="true" stored="false" multiValued="false"/>
</schema>
